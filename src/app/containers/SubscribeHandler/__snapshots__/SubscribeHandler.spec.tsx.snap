// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SubscribeHandler /> should render properly 1`] = `
<div
  className="container"
>
  <FormPagination
    current={0}
    onValidatedStepClick={[Function]}
    steps={
      Array [
        "Email address",
        "Password",
        "Password confirmation",
      ]
    }
  />
  <div
    className="formContainer"
  >
    <div
      className="form"
    >
      <TransitionGroup
        childFactory={[Function]}
        component={null}
      >
        <Transition
          appear={true}
          enter={true}
          exit={true}
          in={true}
          key="mail-container"
          mountOnEnter={true}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={300}
          unmountOnExit={true}
        >
          <Component />
        </Transition>
      </TransitionGroup>
    </div>
  </div>
  <ButtonLink
    dark={true}
    href="/auth/login"
    prefecth={false}
    prefetch={true}
    text="I have an account!"
  />
  <style
    jsx={true}
  >
    
          .formContainer {
            box-shadow: 11px 10px 34px -7px rgba(0, 0, 0, 0.49);
            background-color: #2d3047;
            padding: 1.5rem 1.5rem;
            box-sizing: border-box;
            border-radius: 3px;
            display: flex;
            align-items: center;
            flex-direction: column;
          }

          .stepContainer {
            opacity: 0;
            transition: opacity 300ms ease-in;
            width: 100%;
            height: 100%;
          }

          .stepContainer--entered,
          .stepContainer--entering {
            opacity: 1;
          }

          .stepContainer--exiting,
          .stepContainer--exited {
            position: absolute;
          }

          .form {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 16rem;
            position: relative;
          }

          .inputTransition {
            width: 100%;
          }
        
  </style>
</div>
`;
