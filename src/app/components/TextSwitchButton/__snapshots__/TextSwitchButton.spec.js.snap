// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextSwitchButton /> it should render the second text properly 1`] = `
<button
  className="button button--active"
  onClick={[Function]}
>
  <Transition
    appear={false}
    enter={true}
    exit={true}
    in={false}
    key="initial"
    mountOnEnter={true}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={200}
    unmountOnExit={true}
  >
    <Component />
  </Transition>
  <Transition
    appear={false}
    enter={true}
    exit={true}
    in={true}
    key="active"
    mountOnEnter={true}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={200}
    unmountOnExit={true}
  >
    <Component />
  </Transition>
  <style
    jsx={true}
  >
    
          .button {
            display: flex;
            justify-content: center;
            align-items: center;
            color: #2d3047;
            transition: all 0.5s;
            position: relative;
            text-align: center;
            cursor: pointer;
            font-family: 'Josefin Sans', sans-serif;
            border-radius: 3px;
            padding: 0 0.7rem;
            width: 100%;
            height: 2.35rem;
            margin-top: 0.8rem;
            background: none;
            border: none;
            outline: none;
          }

          .button:hover {
            color: #FAC9B8;
          }

          .button::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #FAC9B8;
            transition-property: transform, opacity;
            transition: 0.3s ease-out;
            border-radius: 3px;
            cursor: pointer;
          }

          .button:hover::before {
            opacity: 0;
            transform: scale(0.5, 0.5);
          }

          .button::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0;
            transition-property: transform, opacity;
            transition: 0.3s ease-out;
            transform: scale(0.7, 0.7);
            background-color: #2d3047;
            border-radius: 3px;
            cursor: pointer;
          }

          .button:hover::after {
            opacity: 1;
            transform: scale(1, 1);
            z-index: 1;
          }

          .text {
            font-size: 0.9rem;
            position: absolute;
            margin: 0;
            padding: 0;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            cursor: pointer;
            z-index: 2;
          }

          .text--exiting,
          .text--exited {
            opacity: 0;
          }

          .text--entering {
            animation: fadeIn 200ms ease-in;
          }

          .text--entered {
            opacity: 1;
          }

          @keyframes fadeIn {
            0% {
              opacity: 0;
            }

            100% {
              opacity: 1;
            }
          }
        
  </style>
</button>
`;

exports[`<TextSwitchButton /> should render properly 1`] = `
<button
  className="button "
  onClick={[Function]}
>
  <Transition
    appear={false}
    enter={true}
    exit={true}
    in={true}
    key="initial"
    mountOnEnter={true}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={200}
    unmountOnExit={true}
  >
    <Component />
  </Transition>
  <Transition
    appear={false}
    enter={true}
    exit={true}
    in={false}
    key="active"
    mountOnEnter={true}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={200}
    unmountOnExit={true}
  >
    <Component />
  </Transition>
  <style
    jsx={true}
  >
    
          .button {
            display: flex;
            justify-content: center;
            align-items: center;
            color: #2d3047;
            transition: all 0.5s;
            position: relative;
            text-align: center;
            cursor: pointer;
            font-family: 'Josefin Sans', sans-serif;
            border-radius: 3px;
            padding: 0 0.7rem;
            width: 100%;
            height: 2.35rem;
            margin-top: 0.8rem;
            background: none;
            border: none;
            outline: none;
          }

          .button:hover {
            color: #FAC9B8;
          }

          .button::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #FAC9B8;
            transition-property: transform, opacity;
            transition: 0.3s ease-out;
            border-radius: 3px;
            cursor: pointer;
          }

          .button:hover::before {
            opacity: 0;
            transform: scale(0.5, 0.5);
          }

          .button::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0;
            transition-property: transform, opacity;
            transition: 0.3s ease-out;
            transform: scale(0.7, 0.7);
            background-color: #2d3047;
            border-radius: 3px;
            cursor: pointer;
          }

          .button:hover::after {
            opacity: 1;
            transform: scale(1, 1);
            z-index: 1;
          }

          .text {
            font-size: 0.9rem;
            position: absolute;
            margin: 0;
            padding: 0;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            cursor: pointer;
            z-index: 2;
          }

          .text--exiting,
          .text--exited {
            opacity: 0;
          }

          .text--entering {
            animation: fadeIn 200ms ease-in;
          }

          .text--entered {
            opacity: 1;
          }

          @keyframes fadeIn {
            0% {
              opacity: 0;
            }

            100% {
              opacity: 1;
            }
          }
        
  </style>
</button>
`;
